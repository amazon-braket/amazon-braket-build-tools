[tox]
envlist = linters,unit-tests

[testenv:unit-tests]
usedevelop=true
basepython = python3
# {posargs} contains additional arguments specified when invoking tox. e.g. tox -- -s -k test_foo.py
commands =
    coverage run -m pytest {posargs}
    coverage report
    coverage html
    coverage xml
extras = test

[testenv:integ-tests]
basepython = python3
# {posargs} contains additional arguments specified when invoking tox. e.g. tox -- -s -k test_foo.py
commands =
    pytest test/integ_tests {posargs}
extras = test

[testenv:linters]
basepython = python3
skip_install = true
deps =
    {[testenv:isort]deps}
    {[testenv:black]deps}
    {[testenv:flake8]deps}
commands =
# isort MUST come before black as it will revert any changes made by black
    {[testenv:isort]commands}
    {[testenv:black]commands}
    {[testenv:flake8]commands}

[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
commands =
    flake8 src {posargs}

[testenv:isort]
basepython = python3
skip_install = true
deps =
    isort
commands =
    isort . {posargs}

[testenv:black]
basepython = python3
skip_install = true
deps =
    black
commands =
    black src {posargs}

[testenv:zip-build]
basepython = python3
skip_install = true
commands =
    /bin/sh -c 'tar -czvf build_files.tar.gz build/'

